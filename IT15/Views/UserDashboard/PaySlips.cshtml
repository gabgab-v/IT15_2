@model IEnumerable<IT15.Models.PaySlip>

@{
    ViewData["Title"] = "My Pay Slips";
    var culture = new System.Globalization.CultureInfo("en-PH");
}

<h2 class="text-2xl font-semibold text-gray-800 mb-6">My Pay Slips</h2>

<div class="space-y-8">
    @if (Model.Any())
    {
        @foreach (var slip in Model)
        {
            var daysPresent = Math.Max(0, slip.WorkingDaysInMonth - slip.DaysAbsent);
            var basePayEarned = Math.Max(0m, slip.BasicSalary - slip.AbsentDeductions);
            var totalAdditions = slip.OvertimePay;
            var statutoryDeductions = slip.SSSDeduction + slip.PhilHealthDeduction + slip.PagIBIGDeduction + slip.TaxDeduction;
            <div id="payslip-container-@slip.Id" class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
                <!-- Payslip Header -->
                <div class="flex justify-between items-center pb-4 border-b border-gray-200">
                    <div>
                        <h3 class="text-xl font-bold text-gray-900">Pay Slip for @slip.Payroll.PayrollMonth.ToString("MMMM yyyy")</h3>
                        <p class="text-sm text-gray-500">Employee: @slip.Employee?.Email</p>
                    </div>
                    <div class="flex items-center space-x-2">
                        <button data-payslipid="payslip-@slip.Id" class="print-button bg-blue-600 text-white font-medium py-2 px-4 rounded-lg hover:bg-blue-700 flex items-center">
                            <i data-lucide="printer" class="w-4 h-4 mr-2"></i>
                            Print
                        </button>
                        
                        <button data-payslipid="payslip-@slip.Id" data-filename="@($"Payslip-{slip.Payroll.PayrollMonth:yyyy-MM}-{slip.Employee.UserName}.pdf")" class="export-pdf-button bg-gray-600 text-white font-medium py-2 px-4 rounded-lg hover:bg-gray-700 flex items-center">
                            <i data-lucide="file-down" class="w-4 h-4 mr-2"></i>
                            PDF
                        </button>
                    </div>
                </div>

                <!-- Printable Payslip Details -->
                <div id="payslip-@slip.Id" class="printable-content">
                    <!-- THE FIX: Added the detailed payslip content here -->
                    <div class="mt-6 space-y-3">
                        <h4 class="text-lg font-semibold text-gray-700 border-b pb-2">Salary Basis</h4>
                        <div class="flex justify-between text-sm"><span>Monthly Salary:</span> <span>@slip.BasicSalary.ToString("C", culture)</span></div>
                        <div class="flex justify-between text-sm"><span>Working Days (Month):</span> <span>@slip.WorkingDaysInMonth</span></div>
                        <div class="flex justify-between text-sm"><span>Daily Rate:</span> <span>@slip.DailyRate.ToString("C", culture)</span></div>
                        <div class="flex justify-between text-sm"><span>Hourly Rate:</span> <span>@slip.HourlyRate.ToString("C", culture)</span></div>
                        <div class="flex justify-between text-sm text-green-600"><span>Base Pay Earned:</span> <span>@basePayEarned.ToString("C", culture)</span></div>
                    </div>

                    <div class="mt-6 space-y-3">
                        <h4 class="text-lg font-semibold text-gray-700 border-b pb-2">Attendance Summary</h4>
                        <div class="flex justify-between text-sm"><span>Days Present:</span> <span>@daysPresent</span></div>
                        <div class="flex justify-between text-sm"><span>Days Absent:</span> <span>@slip.DaysAbsent</span></div>
                        <div class="flex justify-between text-sm"><span>Actual OT Hours:</span> <span>@slip.OvertimeHours.ToString("F2")</span></div>
                        <div class="flex justify-between text-sm"><span>Penalty Hours:</span> <span>@slip.OvertimePenaltyHours.ToString("F2")</span></div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-6 mt-6">
                        <!-- Earnings Column -->
                        <div class="space-y-3">
                            <h4 class="text-lg font-semibold text-gray-700 border-b pb-2">Earnings</h4>
                            <div class="flex justify-between text-sm"><span>Basic Salary (@slip.WorkingDaysInMonth days):</span> <span>@slip.BasicSalary.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm text-green-600"><span>Base Pay Earned (after absences):</span> <span>@basePayEarned.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm">
                                <span>Overtime Pay (@slip.OvertimeHours.ToString("F2") h × @((slip.HourlyRate * 1.25m).ToString("C", culture))):</span>
                                <span>@slip.OvertimePay.ToString("C", culture)</span>
                            </div>
                            <div class="flex justify-between text-sm font-semibold border-t pt-2"><span>Total Additions:</span> <span>@totalAdditions.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm font-bold border-t pt-2"><span>Gross Pay:</span> <span>@slip.GrossPay.ToString("C", culture)</span></div>
                        </div>

                        <!-- Deductions Column -->
                        <div class="space-y-3">
                            <h4 class="text-lg font-semibold text-gray-700 border-b pb-2">Deductions</h4>
                            <div class="flex justify-between text-sm"><span>Absenteeism (@slip.DaysAbsent day(s) × @slip.DailyRate.ToString("C", culture)):</span> <span>- @slip.AbsentDeductions.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm text-red-600">
                                <span>Overtime Penalty (@slip.OvertimePenaltyHours.ToString("F2") h × @slip.HourlyRate.ToString("C", culture)):</span>
                                <span>- @slip.OvertimePenalty.ToString("C", culture)</span>
                            </div>
                            <div class="flex justify-between text-sm"><span>SSS:</span> <span>- @slip.SSSDeduction.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm"><span>PhilHealth:</span> <span>- @slip.PhilHealthDeduction.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm"><span>Pag-IBIG:</span> <span>- @slip.PagIBIGDeduction.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm"><span>Tax:</span> <span>- @slip.TaxDeduction.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm font-semibold border-t pt-2"><span>Statutory Deductions:</span> <span>- @statutoryDeductions.ToString("C", culture)</span></div>
                            <div class="flex justify-between text-sm font-bold border-t pt-2"><span>Total Deductions:</span> <span>- @slip.TotalDeductions.ToString("C", culture)</span></div>
                        </div>
                    </div>

                    <!-- Summary Section -->
                    <div class="mt-8 pt-4 border-t-2 border-gray-300">
                        <div class="flex justify-end">
                            <div class="w-full md:w-1/2 space-y-2">
                                <div class="flex justify-between font-medium"><span>Base Pay Earned:</span> <span>@basePayEarned.ToString("C", culture)</span></div>
                                <div class="flex justify-between font-medium"><span>Total Additions:</span> <span>@totalAdditions.ToString("C", culture)</span></div>
                                <div class="flex justify-between font-medium"><span>Gross Pay:</span> <span>@slip.GrossPay.ToString("C", culture)</span></div>
                                <div class="flex justify-between font-medium"><span>Total Deductions:</span> <span>- @slip.TotalDeductions.ToString("C", culture)</span></div>
                                <div class="flex justify-between text-xl font-bold text-gray-900 mt-2"><span>Net Pay:</span> <span>@slip.NetPay.ToString("C", culture)</span></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-gray-600">No pay slips have been generated for you yet.</p>
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <style>
        @@media print {
            body * {
                visibility: hidden;
            }

            .print-area, .print-area * {
                visibility: visible;
            }

            .print-area {
                position: absolute;
                left: 0;
                top: 0;
                width: 100%;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.print-button').forEach(button => {
                button.addEventListener('click', function () {
                    const payslipId = this.dataset.payslipid;
                    const printSection = document.getElementById(payslipId);
                    if (printSection) {
                        printSection.classList.add('print-area');
                        window.print();
                        printSection.classList.remove('print-area');
                    }
                });
            });

            document.querySelectorAll('.export-pdf-button').forEach(button => {
                button.addEventListener('click', function () {
                    const payslipId = this.dataset.payslipid;
                    const filename = this.dataset.filename;
                    const contentToExport = document.getElementById(payslipId);

                    if (contentToExport) {
                        html2canvas(contentToExport).then(canvas => {
                            const imgData = canvas.toDataURL('image/png');
                            const { jsPDF } = window.jspdf;
                            const pdf = new jsPDF({ orientation: 'p', unit: 'mm', format: 'a4' });
                            const imgProps = pdf.getImageProperties(imgData);
                            const pdfWidth = pdf.internal.pageSize.getWidth();
                            const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
                            pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
                            pdf.save(filename);
                        });
                    }
                });
            });
        });
    </script>
}

